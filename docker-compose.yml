services:
  backend:
    image: 786631761627.dkr.ecr.us-west-1.amazonaws.com/lancechat/backend # lance-ai_backend
    container_name: lance-ai_backend_1
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    # env_file:
    #   - ./backend/.env
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MONGODB_URI: ${MONGODB_URI}
      DATABASE_NAME: ${DATABASE_NAME}
    depends_on:
      - frontend
    networks:
      - webnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://backend:8000/health/"]
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 10s

  frontend:
    image: 786631761627.dkr.ecr.us-west-1.amazonaws.com/lancechat/frontend # lance-ai_frontend
    container_name: lance-ai_frontend_1
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    # env_file:
    #   - ./frontend/.env
    environment:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${NEXT_PUBLIC_FIREBASE_API_KEY}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${NEXT_PUBLIC_FIREBASE_APP_ID}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    networks:
      - webnet
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt  # For Certbot SSL certificates
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./lancechat.conf:/etc/nginx/conf.d/lancechat.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
      - webnet
    depends_on:
      - frontend
      - backend
    restart: "no"

networks:
  webnet:
    driver: bridge

# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     ports:
#       - "8000:8000"
#     env_file:
#       - ./backend/.env
#     depends_on:
#       - frontend
#     restart: unless-stopped

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"
#     env_file:
#       - ./frontend/.env
#     restart: unless-stopped
